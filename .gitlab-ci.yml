variables:
  LATEST_PHP_VERSION: "8.3"
  LATEST_NODE_VERSION: "20"

image: alpine

before_script:
  - apk add docker openssh git

  # Configure SSH
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
  - echo "$SSH_CONFIG" > ~/.ssh/config
  - chmod 644 ~/.ssh/known_hosts

  # Docker image builder
  - docker context create node-amd64 --docker "host=$DOCKER_BUILD_HOST_AMD64"
  - docker buildx create --use --name builder --node builder-amd64 --platform linux/amd64 node-amd64

  - docker context create node-arm64 --docker "host=$DOCKER_BUILD_HOST_ARM64"
  - docker buildx create --append --name builder --node builder-arm64 --platform linux/arm64 node-arm64

  # Docker registries
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  - if [ "$DH_REGISTRY_IMAGE" != "" ]; then docker login -u "$DH_REGISTRY_USER" -p "$DH_REGISTRY_PASSWORD" "$DH_REGISTRY"; fi

build-main:
  stage: build
  script:
    - PHP_IMAGE_TAG="$PHP_VERSION"
    - PHP_VERSION="${PHP_VERSION%-rc}"

    - TAGS="--tag $CI_REGISTRY_IMAGE:php$PHP_VERSION-node$NODE_VERSION"
    - if [ "$DH_REGISTRY_IMAGE" != "" ]; then TAGS="$TAGS --tag $DH_REGISTRY_IMAGE:php$PHP_VERSION-node$NODE_VERSION"; fi

    - |
      if [ "$PHP_VERSION" = "$LATEST_PHP_VERSION" ] && [ "$NODE_VERSION" = "$LATEST_NODE_VERSION" ]; then 
          TAGS="$TAGS --tag $CI_REGISTRY_IMAGE:latest"
          if [ "$DH_REGISTRY_IMAGE" != "" ]; then TAGS="$TAGS --tag $DH_REGISTRY_IMAGE:latest"; fi
      fi

    - |
      if [ "$PHP_VERSION" = "$LATEST_PHP_VERSION" ]; then 
          TAGS="$TAGS --tag $CI_REGISTRY_IMAGE:node$NODE_VERSION"
          if [ "$DH_REGISTRY_IMAGE" != "" ]; then TAGS="$TAGS --tag $DH_REGISTRY_IMAGE:node$NODE_VERSION"; fi
      fi

    - |
      if [ "$NODE_VERSION" = "$LATEST_NODE_VERSION" ]; then 
          TAGS="$TAGS --tag $CI_REGISTRY_IMAGE:php$PHP_VERSION"
          if [ "$DH_REGISTRY_IMAGE" != "" ]; then TAGS="$TAGS --tag $DH_REGISTRY_IMAGE:php$PHP_VERSION"; fi
      fi

    - echo $TAGS

    - docker buildx build --pull --no-cache --build-arg "PHP_VERSION=$PHP_IMAGE_TAG" --build-arg "NODE_VERSION=$NODE_VERSION" $TAGS --platform linux/amd64,linux/arm64 --push .
  parallel:
    matrix:
      - PHP_VERSION: ["8.1", "8.2", "8.3", "8.4-rc"]
        NODE_VERSION: ["18", "20", "22", "23"]
  only:
    refs:
      - main
    changes:
      - .gitlab-ci.yml
      - Dockerfile

build:
  stage: build
  script:
    - TAGS="--tag $CI_REGISTRY_IMAGE:php$PHP_VERSION-node$NODE_VERSION-$CI_COMMIT_REF_SLUG"
    - TAGS="$TAGS --tag $CI_REGISTRY_IMAGE:ref-$CI_COMMIT_REF_SLUG"

    - echo $TAGS

    - docker buildx build --pull --no-cache --build-arg "PHP_VERSION=$PHP_VERSION" --build-arg "NODE_VERSION=$NODE_VERSION" $TAGS --platform linux/amd64,linux/arm64 --push .
  variables:
    PHP_VERSION: "$LATEST_PHP_VERSION"
    NODE_VERSION: "$LATEST_NODE_VERSION"
  only:
    changes:
      - .gitlab-ci.yml
      - Dockerfile
  except:
    - main

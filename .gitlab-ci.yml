before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

build-main:
    stage: build
    script:
        - docker build --pull --no-cache --build-arg "PHP_VERSION=$PHP_VERSION" --build-arg "NODE_VERSION=$NODE_VERSION" --tag "$CI_REGISTRY_IMAGE:php$PHP_VERSION-node$NODE_VERSION" .
        - docker push "$CI_REGISTRY_IMAGE:php$PHP_VERSION-node$NODE_VERSION"

        - |
            if [ "$PHP_VERSION" = "8.0" ] && [ "$NODE_VERSION" = "14" ]; then 
                docker tag "$CI_REGISTRY_IMAGE:php$PHP_VERSION-node$NODE_VERSION" "$CI_REGISTRY_IMAGE:latest"
                docker push "$CI_REGISTRY_IMAGE:latest"
            fi
        - |
            if [ "$PHP_VERSION" = "8.0" ]; then 
                docker tag "$CI_REGISTRY_IMAGE:php$PHP_VERSION-node$NODE_VERSION" "$CI_REGISTRY_IMAGE:node$NODE_VERSION"
                docker push "$CI_REGISTRY_IMAGE:node$NODE_VERSION"
            fi
        - |
            if [ "$NODE_VERSION" = "14" ]; then 
                docker tag "$CI_REGISTRY_IMAGE:php$PHP_VERSION-node$NODE_VERSION" "$CI_REGISTRY_IMAGE:php$PHP_VERSION"
                docker push "$CI_REGISTRY_IMAGE:php$PHP_VERSION"
            fi
    parallel:
        matrix:
            -   PHP_VERSION: ["7.4", "8.0"]
                NODE_VERSION: ["12", "14"]
    tags:
        - docker
    only:
        - main

build:
    stage: build
    script:
        - docker build --pull --no-cache --build-arg "PHP_VERSION=$PHP_VERSION" --build-arg "NODE_VERSION=$NODE_VERSION" --tag "$CI_REGISTRY_IMAGE:php$PHP_VERSION-node$NODE_VERSION-$CI_COMMIT_REF_SLUG" .
        - docker push "$CI_REGISTRY_IMAGE:php$PHP_VERSION-node$NODE_VERSION-$CI_COMMIT_REF_SLUG"
    variables:
        PHP_VERSION: "8.0"
        NODE_VERSION: "14"
    tags:
        - docker
    except:
        - main
